-- MySQL dump 10.13  Distrib 5.7.23, for Linux (x86_64)
--
-- Host: localhost    Database: blog
-- ------------------------------------------------------
-- Server version	5.7.23-0ubuntu0.16.04.1

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `album`
--

DROP TABLE IF EXISTS `album`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `album` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `path` varchar(160) DEFAULT NULL,
  `thumb` varchar(150) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=42 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `album`
--

LOCK TABLES `album` WRITE;
/*!40000 ALTER TABLE `album` DISABLE KEYS */;
INSERT INTO `album` VALUES (1,'upload/img/full/25352e97fe3117724d1f2d2c28369991.jpg','upload/img/thumb/6a8818bba0f8cd5ace9158eb0a31bcfc.jpg'),(2,'upload/img/full/a6e690ce5d98928451e942399edec7de.jpg','upload/img/thumb/57099a19679af209f0df98744e618b66.jpg'),(3,'upload/img/full/97141c137232512bee687fa0d2bfa19f.jpg','upload/img/thumb/428fa03066abc8657ff1fa05bb0421a5.jpg'),(4,'upload/img/full/b5baf7d0f7f3155a9521c3370defb4d3.jpg','upload/img/thumb/2d1e343137a20cbef98bd0bfacb51c80.jpg'),(5,'upload/img/full/24bf84eb0f33a81214428929c71c8737.jpg','upload/img/thumb/6bfdea2a988dc4fb7b12aadd31273d92.jpg'),(6,'upload/img/full/232a7620e109ecb6ed4e300c3e07a010.jpg','upload/img/thumb/a72fed7716fe922b79ee24bca541131d.jpg'),(7,'upload/img/full/b04bf8d6b15bfed9f67efad75a9a7ba0.jpg','upload/img/thumb/a1d250e9506446ac283be4d2e1c26982.jpg'),(8,'upload/img/full/a80ae46effa3a64680a9da1fe09e8868.jpg','upload/img/thumb/4fd985a2bf2e31beff4d6dea6c07d0f3.jpg'),(9,'upload/img/full/b0bd25ec70684b525df4e7df2896f7bb.jpg','upload/img/thumb/1df690d36dc5a595cb8facdaa6776767.jpg'),(10,'upload/img/full/8b9df78fefe74e6dde32c10acf039a1f.jpg','upload/img/thumb/6c21378d3ba16800015a856deed924df.jpg'),(11,'upload/img/full/b0b75e0fefca51d6f8dacdd551516bec.jpg','upload/img/thumb/870a808d128a944eb86a72847e88c039.jpg'),(12,'upload/img/full/b38ed0ebcb2bbb4944a92062b983da84.jpg','upload/img/thumb/9dde0a155a78026d6cd1fe2aa7dbc7d1.jpg'),(13,'upload/img/full/054d3f201052cae2efb4c71d759f25fa.jpg','upload/img/thumb/f2ba5473b9d8fc5ec0683fada9ac83c8.jpg'),(14,'upload/img/full/8926f8b347e4303618d48ccaced5ed2d.jpg','upload/img/thumb/b1e0c87e28f890553ca013fe48eece79.jpg'),(15,'upload/img/full/206acd3c7eae65423799b51b4d09be48.jpg','upload/img/thumb/41c8aba0057059f503118f8ff293e652.jpg'),(16,'upload/img/full/4867ed29c9e85fc0ca7840e4525665db.jpg','upload/img/thumb/50dee1b0852c80e59c9d6722d509c5c5.jpg'),(17,'upload/img/full/f4467f9a32738b2e80fddde2e37f3d6c.jpg','upload/img/thumb/91796ed96a6c8422feaeff2eca646a7c.jpg'),(18,'upload/img/full/20b5a89449a21555e1d0e35c2307f953.jpg','upload/img/thumb/a2ae4d025bd20692e1bae7720972148f.jpg'),(19,'upload/img/full/d2113105ba93d83c6515e1ccc4a75926.jpg','upload/img/thumb/01bc2bd09672450a42aecfd7ec04be2f.jpg'),(20,'upload/img/full/44350577ce16e0187009ec931dec664c.jpg','upload/img/thumb/1795c0048a923c3274d9032d84482098.jpg'),(21,'upload/img/full/9bb8c2fbe75892d45877f2cecc396708.jpg','upload/img/thumb/67dd9a2d2f5c33986f776fab6e48f0aa.jpg'),(27,'upload/img/full/2336d307e7b10e352cab2b2195d80bbd.jpg','upload/img/thumb/bc3c3169bc837ac70eba6cc0726aa602.jpg'),(28,'upload/img/full/083b18c1a6aa7a649edf27f5b47722d1.jpg','upload/img/thumb/4ce5f201d293f8c0e886d83fc493a2a0.jpg'),(29,'upload/img/full/c01b042e8d95a2b186de079ef07526b2.jpg','upload/img/thumb/67722dd9156845efdbe8f2bc300be177.jpg'),(30,'upload/img/full/d6376240b1676a88a6f604793d8e86c8.jpg','upload/img/thumb/12e7ce82a4a7d91f8198de7c66a1dcb6.jpg'),(31,'upload/img/full/ddee40afeee80a4ac7ec06549510924f.jpg','upload/img/thumb/e81df0b4af974a69a95fe8492445b697.jpg'),(32,'upload/img/full/d21361b4504f3a607e402809ad7148ce.jpg','upload/img/thumb/40b24f0d68c80e5f96aebce53faba8be.jpg'),(33,'upload/img/full/f07adf892b1b876a2c68bba04d0ddc81.jpg','upload/img/thumb/967bbe7b100db5a70fb9b9d259712d33.jpg'),(34,'upload/img/full/2974de2dc21d0f0dcab829e1a9bb34b8.jpg','upload/img/thumb/19d2fc1f8ccf4db3415f408f394d2de8.jpg'),(35,'upload/img/full/e61d6e0f52b7aaefa23f51769fda4d06.jpg','upload/img/thumb/244107e259413cf517bcb200c102b5b4.jpg'),(36,'upload/img/full/6934f394704c1dadfd4e11c7812c4cd1.jpg','upload/img/thumb/81518e9de04e7e53ae3f2a41cf9a1807.jpg'),(37,'upload/img/full/1cb0f8a8a637ec7a2e1ecd74a117354d.jpg','upload/img/thumb/4f6bd33cec4b8996a4104128345260e2.jpg'),(38,'upload/img/full/3bf6c3db8bb3e9ab53e442e47ea54466.jpg','upload/img/thumb/b24b7ba623e6b0a1d9681da3a9ec7f5d.jpg'),(39,'upload/img/full/641a7dde7602416ec4b206e985762b38.jpg','upload/img/thumb/f2a6ada70d4e44036717ecaa59f003ec.jpg'),(40,'upload/img/full/77cf5461001f817cde59996304c537bf.jpg','upload/img/thumb/94cac00bddff8786037cfc7d76fca0ae.jpg'),(41,'upload/img/full/5d88541b9e003ddb01b465418cc51409.jpg','upload/img/thumb/a6f6de5f4b19a8f421ee877c395bc434.jpg');
/*!40000 ALTER TABLE `album` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `blog`
--

DROP TABLE IF EXISTS `blog`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `blog` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `title` varchar(50) NOT NULL,
  `uid` int(11) NOT NULL,
  `content` text NOT NULL,
  `cover` varchar(150) NOT NULL,
  `view` int(8) NOT NULL DEFAULT '0',
  `updatetime` int(11) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=38 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `blog`
--

LOCK TABLES `blog` WRITE;
/*!40000 ALTER TABLE `blog` DISABLE KEYS */;
INSERT INTO `blog` VALUES (1,'大学毕业后，为何我变得俞来担忧未来',1,'<p>\r\n	大家好，我是4w.今天是博客上线第一天，上周末，也就是2018/02/03号周六，闲来无事，用laravel搭了一个比较清爽的博客，那么今天周一就准备上了。\r\n</p>\r\n<p>\r\n	这是我的第一篇博客，不知道说点儿什么比较好，之前也没写过博客。写博客能让一个人沉下心来，去分析错误，温习知识，帮助他人。首先介绍一下自己吧。知己知彼，百战不殆。2017年，我就读的专业也很牛逼，可以说是科班出身，计算机科学与技术（爱尔兰力魔瑞克科技大学）合作办学，其实就是每年派几位所谓的国外著名教授过来授课。要问我大学学到了什么，我还真不知道，都是在迷迷糊糊中过去了。直到大四上学期，大家去培训班培训的，还有一些已经找到工作的，还有一部分人对未来毫不担忧在宿舍玩儿游戏。那阵子，我每天在宿舍躺着，真的是感觉到恶心了。恶心自己那段时间的状态，觉得前途一片黑暗，不知道自己能做什么。\r\n</p>\r\n<p>\r\n	&nbsp;于是开始去找工作。由于当时自己在学校学了一些网页制作方面的技术，其实现在看来那是相当可笑的。果不其然，面试了好几家，要么是骗子，要么是问的问题不会。我记得非常清楚，那时候的挫败感。那时候真的觉得自己特别窝囊，20多岁了，读了这么多年书，竟然自己找份工作都如同登天，难上加难。为了提前尝试踏入社会的感受，那两天也没去住连锁酒店，就去找了旅馆，空间特别狭小，打卡门里面就一张单人床的空间，还散发着刺激的扑鼻的气味儿，我想那一定是床单化学消毒残留的味道，床单上还遗留着一根长发，这意味着之前还有一位女客人在此停留。生活啊生活，善待过谁，捉弄过谁。第二天继续去面试，结果又是那种骗培训的机构。两天时间没任何收货，还住了廉价旅馆，这下对社会的残酷是真的体会到了。。。\r\n</p>\r\n<p>\r\n	后来回到学校开始疯狂地学习相关知识，我觉得别人能学会的自己一定也能学会。但是，又何曾知道学习是多么地枯燥，那是相当考验耐力的行为。后来经过一个月的准备，终于找到一家小公司做微信开发，自己的技术也是在那段时间快速成长，现在看来那时候自己的技术真是菜到家，刚去的时候仅仅会简单的数据库curd。总之那是一段挥之不去的记忆，成长不都是要付出代价的吗。\r\n</p>\r\n<p>\r\n	我大学有个相当严格而又奇葩的规定，那就是大学四年期间挂科达到26分，那么就没学位证。你可知道，拿不到学位证意味着什么，那就等于白读，没人愿意承认你的学位。我之前一直都是学习无用论的支持者，我还在宿舍大师宣扬过这种无用论。但现在看来，这种想法是多么的可笑。有些事情学位达不到就是做不了，因为你压根就不知道那种深度。我大学前三年是极其痛苦的，因为我每学期必定挂科，我也不知道为什么，好像所有老师都跟我过不去一样。马克思思想，接口技术，大学物理上，大学物理下，工程制图。。合计一下，我挂了19分。现在想起来，还挺悬的。大学物理下重修两年才过，交了300块重修费不说，大四最后一次重修考不过还会延长毕业，所以大四那段时间自己压力相当大。每天都在看题，那时候真的在想，大学四年我都学了什么呢?\r\n</p>\r\n<p>\r\n	说远了。大学是一段懊悔和感激的岁月。我还是要感谢大学的，自己成长了很多，那些都是无形中的影响。现在每天早出晚归，但总归一切都比之前好点儿了，没有退步就是成长。明天还有上班，这篇博客就写到这里吧。最后推荐一首我以前听过的一首歌曲&lt;&lt;如果我能回头&gt;&gt;，这首歌是大一大二自己听过最多的一首说唱，现在听起来还会热泪盈眶，真的是，所有的后悔和不甘都颍上心头。\r\n</p>\r\n<p>\r\n	我是4w,以后这就是我的技术和个人博客。谢谢每一个有幸阅读此篇博客的朋友。\r\n</p>','upload/img/aaa1519443190.jpg',207,1517841918),(10,'lamp环境部署，php环境部署',1,'<p>\r\n	说到php,那是无人不知，无人不晓。曾经在web开发界，有一句传说-----php是世界上最好的语言。至于为什么，我就不说了。我想，大伙心里都有自己的答案。\r\n</p>\r\n<p>\r\n	其实，用什么语言并不重要，只要你能举一反三，达到公司项目的需求，发挥到最极致的状态，那就足够了。php仍然是当今web开发界最火的语言，没有之一。php7的性能更是得到了大幅度的提升。本篇文章旨在那些愿意学习php的朋友们，如果你对php有敌意，那对不起，请你离开，这一篇妹子可能不适合你。\r\n</p>\r\n<p>\r\n	为了以后学习更加得心应手，成为高手。我建议大家尽早接触linux,因为我们大部分应用都是部署到linux服务器上的，当然你有钱，任性的话就继续windows.学习linux的好处，也是大大的有。我也描绘不出来，你学了你才知道我没骗你。好了，下面正式介绍一下如何在linux(ubuntu)系统中部署开发环境。\r\n</p>\r\n<p>\r\n	打开终端，crtl+alt+t。\r\n</p>\r\n<p>\r\n	apt update\r\n</p>\r\n<p>\r\n	此处会有大量的代码出现，哈哈，看起来多么美妙的字符啊。大概等了几十秒，update完毕。接下来执行\r\n</p>\r\n<p>\r\n	apt install apache2\r\n</p>\r\n<p>\r\n	这句指令就是安装apache2系列的执令，当你按下之后系统就将进行安装apache2.中途会提示你yes/no,yes就行。\r\n</p>\r\n<p>\r\n	安装完毕之后，打开浏览器，输入127.0.0.1,看一下是不是apache的默认界面。这就说明apache已经安装完成。就是这么神速。好了，接下来请您执行以下命令。\r\n</p>\r\n<p>\r\n	apt install mysql-server(mysql数据库服务)&nbsp;\r\n</p>\r\n<p>\r\n	apt install php （php）\r\n</p>\r\n<p>\r\n	apt insatll apache2-mod-php(apache的php模块)\r\n</p>\r\n<p>\r\n	apt-install php-mysql（php的mysql扩展）\r\n</p>\r\n<p>\r\n	装完这一系列的东西，就大功告成了。默认网站根目录在/var/www/html下。\r\n</p>\r\n<p>\r\n	说下apache的配置文件，apache的配置文件其实在默认页说的很清楚了。当然你可以打开/etc/apache2/apache2.conf进行查看。mods-available这是apache2的模块，sites-available这是虚拟主机的配置，启用这些配置分别需要在enabled目录创建软连接,重启apache服务即可。\r\n</p>\r\n<p>\r\n	windows开发环境的话，也可以照此顺序配置，不过现在集成环境比较多了，phpstudy,wampserver,xamp,大家可以随便挑一个安装，一键启动，很是方便。不过还是建议大家玩儿下linux.\r\n</p>\r\n<p>\r\n	如有疑问，请在下方评论或联系我。\r\n</p>','upload/img/aaa1519442948.jpg',69,1518324944),(11,'科学上网（翻墙）看这里，aws搭建ss梯子',1,'<p>\r\n	科学上网，一个隐晦的词语。随着国内对vpn的封锁和严格的监管制度。一大批vpn服务商均宣布撤离大陆市场，这下可急坏了一大批翻墙刚需。毕竟，我们国内还是有很多需要用google,youtube学习国外技术的童鞋，因此我今天打算写一篇自己动手，丰衣足食的博客，来安慰哥哥妹子们受伤的心灵。\r\n</p>\r\n<p>\r\n	其实，一切都不那么难。第一步请百度搜索aws,注册账号。就是填一些个人信息，最后一步需要验证信用卡账号，用于你浪了很多流量后扣你的钱。但只要不是一天24小时，一月30天每天看着youtube视频，就不会超流量的。这个完全可以放心。\r\n</p>\r\n<p>\r\n	登录aws,选择地区，选一个你喜欢的地区，我推荐选择东京，这个节点离中国比较近，速度快些。然后创建ec2,选择免费的推荐的ubuntu系统，这里是以ubuntu为例，你也可以根据喜好来选择不同的linux系统。然后创建秘钥，用于ssh登录使用。重要的一步是创建安全组，安全组添加入站规则，开放端口443，你也可以随意写，然后出站规则为任意就ok了。然后启动实例。\r\n</p>\r\n<p>\r\n	windows端本地下载xshell或者mobaxterm等工具，登录到刚刚创建的实例。接下来我们在服务器上安装shadowsocks服务。\r\n</p>\r\n<p>\r\n	运行一下指令：\r\n</p>\r\n<p>\r\n	apt intsall python-pip\r\n</p>\r\n<p>\r\n	pip install shadowsocks\r\n</p>\r\n<p>\r\n	然后cd /etc目录下，我们创建shadowsock的配置文件 vim socks.json 这个名字随意起，看你心情。\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<pre class=\"prettyprint lang-js\">{\r\n\r\n    \"server\": \"0.0.0.0\",\r\n\r\n    \"server_port\":443,\r\n\r\n    \"local_address\":\"127.0.0.1\",\r\n\r\n    \"local_port\":1080,\r\n\r\n    \"password\":\"密码\"，\r\n\r\n    \"method\":\"rc4-md5\"     加密方式\r\n\r\n}</pre>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	然后我们启动服务，ssserver -c socks.json -d start&nbsp; 守护模式\r\n</p>\r\n<p>\r\n	这样服务器端就ok了。我们在客户端连接就可以使用了，有没有很激动。\r\n</p>\r\n<p>\r\n	ios可以下载 wingy 填写你的配置信息连接就行啦，youtube视频刷刷刷，要多栓爽有多爽。\r\n</p>\r\n<p>\r\n	windows端可以到github上去下载。\r\n</p>\r\n<p>\r\n	下面是windows上的配置，大家看一下。\r\n</p>\r\n<p>\r\n	<img src=\"/upload/ck/dea2bf3f7b8df8cd49cb00acb412fee2.jpg\" alt=\"\" /> \r\n</p>\r\n<p>\r\n	按照你的配置服务器，密码，加密方式填写一下就行了。然后确定运行。然后打开&nbsp;<a href=\"https://www.youtube.com/\" target=\"_blank\">https://www.youtube.com/</a> \r\n</p>\r\n<p>\r\n	<img src=\"/upload/ck/87a4bd36f8d64213273501f666f0e7e9.jpg\" alt=\"\" /> \r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	安卓平台大家也可以去github上搜。如果找不到可以在评论区留下邮箱，我发你。\r\n</p>\r\n<p>\r\n	搞定！\r\n</p>','upload/img/aaa1518575484.jpg',195,1518338342),(14,'如何U盘安装ubuntu系统',1,'<p>\r\n	说到Linux系统，想必你一定是非常热爱的。至于为什么，我想当你打开terminal的时候，你心里已经有数了。举个最简单的例子，ubuntu中安装lamp环境的话，几个命令，轻松搞定。但是在windows中，你自己好好想想吧。\r\n</p>\r\n<p>\r\n	下面说说怎么安装ubuntu系统，ubuntu现在已经越来越火了，越来越多的公司服务器开始使用ubuntu. 好了，下面说说怎么安装它。首先到UBUNTU官网，<a href=\"https://www.ubuntu.com/download/desktop\" target=\"_blank\">https://www.ubuntu.com/download/desktop</a>,是下面的样子的说明你不是个傻子。\r\n</p>\r\n<p>\r\n	<img src=\"/upload/ck/0ba4a2eec1eadccddbe5b14bc636adf9.jpg\" alt=\"\" /> \r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	点击下载即可，下载完成后就是制作U盘启动盘了。我贴出一个连接，大家去下载<a href=\"https://cn.ultraiso.net/\" target=\"_blank\">https://cn.ultraiso.net/</a>&nbsp; 下载成功后打开软件，选择文件打开，选择你下载的系统镜像。\r\n</p>\r\n<p>\r\n	接下来大家看图吧，有图有真相，你再不会装的话，我觉得可能我以为帮不了你了。\r\n</p>\r\n<p>\r\n	<img src=\"/upload/ck/d7690b937ccc54d1b33a041161150db5.jpg\" alt=\"\" /> \r\n</p>\r\n<p>\r\n	<img src=\"/upload/ck/dc0c792c9058c2182191edeb4df8d09f.jpg\" alt=\"\" /> \r\n</p>\r\n<p>\r\n	等待刻录完成，这样一张ubuntu系统的U盘启动已经大功告成了。接下来就是设置你要为其安装的电脑进行u盘启动设置了。这里推荐一种比较简单的方法。\r\n</p>\r\n<p>\r\n	将U盘插入，然后开机，当你看到开机画面的时候，按下启动键，会出现选项，你选择你的U盘然后确定即可。不同的电脑，热键不同。\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<table class=\"hotkey\" border=\"1\" width=\"100%\" style=\"padding:0px;margin:0px;color:#4B4B4B;font-family:Tahoma, Verdana, Simsun, &quot;font-size:12px;\">\r\n	<tbody>\r\n		<tr>\r\n			<td class=\"hotkey_title\" colspan=\"2\">\r\n				<b>组装机主板</b> \r\n			</td>\r\n			<td class=\"hotkey_title\" colspan=\"2\">\r\n				<b>品牌笔记本</b> \r\n			</td>\r\n			<td class=\"hotkey_title\" colspan=\"2\">\r\n				<b>品牌台式机</b> \r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td class=\"hotkey_brand\" width=\"17%\">\r\n				主板品牌\r\n			</td>\r\n			<td class=\"hotkey_brand\" width=\"17%\">\r\n				启动按键\r\n			</td>\r\n			<td class=\"hotkey_brand\" width=\"17%\">\r\n				笔记本品牌\r\n			</td>\r\n			<td class=\"hotkey_brand\" width=\"17%\">\r\n				启动按键\r\n			</td>\r\n			<td class=\"hotkey_brand\" width=\"16%\">\r\n				台式机品牌\r\n			</td>\r\n			<td class=\"hotkey_brand\" width=\"16%\">\r\n				启动按键\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				华硕主板\r\n			</td>\r\n			<td>\r\n				F8\r\n			</td>\r\n			<td>\r\n				联想笔记本\r\n			</td>\r\n			<td>\r\n				F12\r\n			</td>\r\n			<td>\r\n				联想台式机\r\n			</td>\r\n			<td>\r\n				F12\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				技嘉主板\r\n			</td>\r\n			<td>\r\n				F12\r\n			</td>\r\n			<td>\r\n				宏基笔记本\r\n			</td>\r\n			<td>\r\n				F12\r\n			</td>\r\n			<td>\r\n				惠普台式机\r\n			</td>\r\n			<td>\r\n				F12\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				微星主板\r\n			</td>\r\n			<td>\r\n				F11\r\n			</td>\r\n			<td>\r\n				华硕笔记本\r\n			</td>\r\n			<td>\r\n				ESC\r\n			</td>\r\n			<td>\r\n				宏基台式机\r\n			</td>\r\n			<td>\r\n				F12\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				映泰主板\r\n			</td>\r\n			<td>\r\n				F9\r\n			</td>\r\n			<td>\r\n				惠普笔记本\r\n			</td>\r\n			<td>\r\n				F9\r\n			</td>\r\n			<td>\r\n				戴尔台式机\r\n			</td>\r\n			<td>\r\n				ESC\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				梅捷主板\r\n			</td>\r\n			<td>\r\n				ESC或F12\r\n			</td>\r\n			<td>\r\n				联想Thinkpad\r\n			</td>\r\n			<td>\r\n				F12\r\n			</td>\r\n			<td>\r\n				神舟台式机\r\n			</td>\r\n			<td>\r\n				F12\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				七彩虹主板\r\n			</td>\r\n			<td>\r\n				ESC或F11\r\n			</td>\r\n			<td>\r\n				戴尔笔记本\r\n			</td>\r\n			<td>\r\n				F12\r\n			</td>\r\n			<td>\r\n				华硕台式机\r\n			</td>\r\n			<td>\r\n				F8\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				华擎主板\r\n			</td>\r\n			<td>\r\n				F11\r\n			</td>\r\n			<td>\r\n				神舟笔记本\r\n			</td>\r\n			<td>\r\n				F12\r\n			</td>\r\n			<td>\r\n				方正台式机\r\n			</td>\r\n			<td>\r\n				F12\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				斯巴达卡主板\r\n			</td>\r\n			<td>\r\n				ESC\r\n			</td>\r\n			<td>\r\n				东芝笔记本\r\n			</td>\r\n			<td>\r\n				F12\r\n			</td>\r\n			<td>\r\n				清华同方台式机\r\n			</td>\r\n			<td>\r\n				F12\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				昂达主板\r\n			</td>\r\n			<td>\r\n				F11\r\n			</td>\r\n			<td>\r\n				三星笔记本\r\n			</td>\r\n			<td>\r\n				F12\r\n			</td>\r\n			<td>\r\n				海尔台式机\r\n			</td>\r\n			<td>\r\n				F12\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				双敏主板\r\n			</td>\r\n			<td>\r\n				ESC\r\n			</td>\r\n			<td>\r\n				IBM笔记本\r\n			</td>\r\n			<td>\r\n				F12\r\n			</td>\r\n			<td>\r\n				明基台式机\r\n			</td>\r\n			<td>\r\n				F8\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				翔升主板\r\n			</td>\r\n			<td>\r\n				F10\r\n			</td>\r\n			<td>\r\n				富士通笔记本\r\n			</td>\r\n			<td>\r\n				F12\r\n			</td>\r\n			<td>\r\n				&nbsp;\r\n			</td>\r\n			<td>\r\n				&nbsp;\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				精英主板\r\n			</td>\r\n			<td>\r\n				ESC或F11\r\n			</td>\r\n			<td>\r\n				海尔笔记本\r\n			</td>\r\n			<td>\r\n				F12\r\n			</td>\r\n			<td>\r\n				&nbsp;\r\n			</td>\r\n			<td>\r\n				&nbsp;\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				冠盟主板\r\n			</td>\r\n			<td>\r\n				F11或F12\r\n			</td>\r\n			<td>\r\n				方正笔记本\r\n			</td>\r\n			<td>\r\n				F12\r\n			</td>\r\n			<td>\r\n				&nbsp;\r\n			</td>\r\n			<td>\r\n				&nbsp;\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				富士康主板\r\n			</td>\r\n			<td>\r\n				ESC或F12\r\n			</td>\r\n			<td>\r\n				清华同方笔记本\r\n			</td>\r\n			<td>\r\n				F12\r\n			</td>\r\n			<td>\r\n				&nbsp;\r\n			</td>\r\n			<td>\r\n				&nbsp;\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				顶星主板\r\n			</td>\r\n			<td>\r\n				F11或F12\r\n			</td>\r\n			<td>\r\n				微星笔记本\r\n			</td>\r\n			<td>\r\n				F11\r\n			</td>\r\n			<td>\r\n				&nbsp;\r\n			</td>\r\n			<td>\r\n				&nbsp;\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				铭瑄主板\r\n			</td>\r\n			<td>\r\n				ESC\r\n			</td>\r\n			<td>\r\n				明基笔记本\r\n			</td>\r\n			<td>\r\n				F9\r\n			</td>\r\n			<td>\r\n				&nbsp;\r\n			</td>\r\n			<td>\r\n				&nbsp;\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				盈通主板\r\n			</td>\r\n			<td>\r\n				F8\r\n			</td>\r\n			<td>\r\n				技嘉笔记本\r\n			</td>\r\n			<td>\r\n				F12\r\n			</td>\r\n			<td>\r\n				&nbsp;\r\n			</td>\r\n			<td>\r\n				&nbsp;\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				捷波主板\r\n			</td>\r\n			<td>\r\n				ESC\r\n			</td>\r\n			<td>\r\n				Gateway笔记本\r\n			</td>\r\n			<td>\r\n				F12\r\n			</td>\r\n			<td>\r\n				&nbsp;\r\n			</td>\r\n			<td>\r\n				&nbsp;\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				Intel主板\r\n			</td>\r\n			<td>\r\n				F12\r\n			</td>\r\n			<td>\r\n				eMachines笔记本\r\n			</td>\r\n			<td>\r\n				F12\r\n			</td>\r\n			<td>\r\n				&nbsp;\r\n			</td>\r\n			<td>\r\n				&nbsp;\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				杰微主板\r\n			</td>\r\n			<td>\r\n				ESC或F8\r\n			</td>\r\n			<td>\r\n				索尼笔记本\r\n			</td>\r\n			<td>\r\n				ESC\r\n			</td>\r\n			<td>\r\n				&nbsp;\r\n			</td>\r\n			<td>\r\n				&nbsp;\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				致铭主板\r\n			</td>\r\n			<td>\r\n				F12\r\n			</td>\r\n			<td>\r\n				&nbsp;\r\n			</td>\r\n			<td>\r\n				&nbsp;\r\n			</td>\r\n			<td>\r\n				&nbsp;\r\n			</td>\r\n			<td>\r\n				&nbsp;\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				磐英主板\r\n			</td>\r\n			<td>\r\n				ESC\r\n			</td>\r\n			<td>\r\n				&nbsp;\r\n			</td>\r\n			<td>\r\n				&nbsp;\r\n			</td>\r\n			<td>\r\n				&nbsp;\r\n			</td>\r\n			<td>\r\n				&nbsp;\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				磐正主板\r\n			</td>\r\n			<td>\r\n				ESC\r\n			</td>\r\n			<td>\r\n				&nbsp;\r\n			</td>\r\n			<td>\r\n				&nbsp;\r\n			</td>\r\n			<td>\r\n				&nbsp;\r\n			</td>\r\n			<td>\r\n				&nbsp;\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				冠铭主板\r\n			</td>\r\n			<td>\r\n				F9\r\n			</td>\r\n			<td>\r\n				&nbsp;\r\n			</td>\r\n			<td>\r\n				&nbsp;\r\n			</td>\r\n			<td>\r\n				&nbsp;\r\n			</td>\r\n			<td>\r\n				&nbsp;\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td colspan=\"6\">\r\n				<span class=\"STYLE1\">注意：其它机型请尝试或参考以上品牌常用启动热键<br />\r\n</span> \r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	好了，以上就是安装系统的方法。这种方式不仅仅适用于安装linux，任何系统都可以的。还迷瞪呢？赶紧试试吧。\r\n</p>','upload/img/aaa1519452185.jpg',13,1519453193),(15,'Apache虚拟主机配置',1,'<p>\r\n	虚拟主机，多么动听的字符。想必大家对虚拟主机一定是听说过很多遍了。虚拟主机是什么？\r\n</p>\r\n<p>\r\n	简单来说，就是一台主机上配置多个网站或应用，这样做的好处是大大的。能够充分利用主机空间。下面演示一下，我使用的是ubuntu系统。\r\n</p>\r\n<p>\r\n	<img src=\"/upload/ck/93b1383a2512c4f9698a8c3f724ddb1f.jpg\" alt=\"\" /> \r\n</p>\r\n<p>\r\n	在这里我想说一声它的运行流程，在apache.conf中，会包含sites-enabled中的所有文件，也就是说虚拟主机的配置文件都在sites-enabled中，如果你对ubuntu系统不太熟悉的话，这会很坑。然后这个文件夹里，其实都是软链，它的源文件是在sites-available，这样做的好处不必多说，用过的都说好。好了下面我在sites-available下建立一个虚拟主机的配置文件blog.conf,代码如下\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<pre class=\"prettyprint lang-php\">&lt;VirtualHost *:80&gt;\r\n        ServerName  hotelnsb.top\r\n        ServerAdmin chensiwei1@outlook.com\r\n        DocumentRoot /var/www/larablog/public\r\n        ErrorLog ${APACHE_LOG_DIR}/error.log\r\n        CustomLog ${APACHE_LOG_DIR}/access.log combined\r\n        &lt;Directory \"/var/www/larablog/public\"&gt;\r\n                Options FollowSymLinks\r\n                AllowOverride all\r\n        &lt;/Directory&gt;\r\n&lt;/VirtualHost&gt;</pre>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	其中ServerName这个字段就是我们要使用的域名，可以是自己申请的，也可以是随便写，随便写的话记得在本机的hosts文件中加上就可以了。DocumentRoot这个是域名访问的应用目录，这里就是本博客的目录。由于我的博客使用了apache的rewrite模块，采用的是外部.htaccess的方法。所以记得加上AllowOverride All这样就能读取.htaccess就行访问了。然后我建立软链到sites-enabled并重启apache。在浏览器中访问<br />\r\n<img src=\"/upload/ck/b0993f0beee5c158c6745a2b1f80de7c.jpg\" alt=\"\" /><br />\r\n虚拟主机设置成功。在windows上原理是一样的，找到apache的配置文件即可。记得重启apache。\r\n</p>','upload/img/aaa1519721482.jpg',207,1519722147),(16,'设计模式之单例模式',1,'<p>\r\n	设计模式，是大神们经过长期的oop编程，总接下来的经验。好的设计模式能够使我们的代码更加高效，让我们的代码更加健壮。今天，聊聊单例模式。单例模式是设计模式中最简单的形式之一。这一模式的目的是使得类的一个对象成为系统中的唯一实例。想一想，我们在软件设计当中，这种场景是不是存在很多呢？\r\n</p>\r\n<p>\r\n	比如数据库操作类。数据库操作是我们服务端经常打交道的，我们要想从数据库拿数据，或者往数据库插入新数据，都需要我们访问数据库。想一下，我们如果不使用单例模式将创建很多数据库操作类，创建类就会消耗服务器的内存。但是我们的数据库操作类只存在我们的内存一份儿就可以了，这正是单例模式的天下。那我们如何去实现呢？首先我们要禁止外界实例化我们的数据库操作类，禁止new操作。那么第二步我们就需要提供给外界一个获取实例的方法。然后去调用数据库的操作就可以了。因此我们要做的就是\r\n</p>\r\n<p>\r\n	1，私有化构造函数,\r\n</p>\r\n<p>\r\n	2，提供静态方法，拿到类的实例\r\n</p>\r\n<p>\r\n	上代码，大家看一下就瞬间明白了。\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<pre class=\"prettyprint lang-php\">&lt;?php \r\nini_set(\"display_errors\", \"On\");\r\nerror_reporting(E_ALL);    // 除了E_NOTICE之外，报告所有的错误\r\n// error_reporting(1);       // 只报告致命错误\r\nclass Db\r\n{\r\n	private $conn;//数据库连接标识\r\n	private static $client;//类的实例\r\n	//私有构造函数，禁止外界new\r\n	private function __construct()\r\n	{\r\n		$dsn=\"mysql:host=127.0.0.1;dbname=test\";\r\n		$user = \"root\";\r\n		$pass = \"root\";\r\n		try {\r\n			$this-&gt;conn = new \\PDO($dsn,$user,$pass);\r\n		} catch (\\Exception $e) {\r\n			exit($e-&gt;getMessage());	\r\n		}\r\n	}\r\n\r\n	//静态方法，提供类的实例\r\n	public static function client(){\r\n		if(!self::$client){\r\n			self::$client = new self();\r\n		}\r\n		return self::$client;\r\n	}\r\n\r\n	//查询\r\n	public function query($sql){\r\n		$data = array();\r\n		$res = $this-&gt;conn-&gt;query($sql);\r\n		foreach ($res as $row) {\r\n			$data[] = $row;\r\n		}\r\n		return $data;\r\n	}\r\n\r\n	//插入，更新\r\n	public function execute($sql){\r\n		return $this-&gt;conn-&gt;execute($sql);\r\n	}\r\n\r\n}\r\n$sql = sprintf(\"select id,title from blog\");\r\n$res = Db::client()-&gt;query($sql);\r\nvar_dump($res);</pre>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	然后运行，拿到结果。\r\n</p>\r\n<p>\r\n	<img src=\"/upload/ck/f1e07f02910558ed4e5037a09334c7ac.jpg\" alt=\"\" /> \r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	大家可以试着写一下哦！！！\r\n</p>\r\n<p>\r\n	static可以用来区分成员变量、方法是属于类本身还是属于类实例化后的对象。有static修饰的成员属于类本身，没有static修饰的成员属于类的实例。\r\n</p>','upload/img/aaa1520579870.jpg',50,1520579837),(17,'Redis 队列表白邮件',1,'<p>\r\n	学以致用，举一反三。redis想必大家都认识了，redis是一个基于内存的高效的key-value数据库，它存储在内存中，所以效率特别快，省去了很多数据库查询效率慢的问题。\r\n</p>\r\n<p>\r\n	redis的运用场景非常多，比如要限制一个用户一分钟之内只能登陆系统4次，这就可以把此用户作为key，存到redis,有效60秒，下次登录把key拿出对比，若小于1分钟则递增次数，直到次数等于3时，禁止登录，并将有效时间更新为+60.就可以了。\r\n</p>\r\n<p>\r\n	redis拥有字符串，列表，哈希，集合等数据结构，非常方便。今天我用一个简单的例子，说一下redis无处不在的场景。那么就得对她多加关心，每天睡前想发一封表白邮件给她，但是你懂得程序员嘛，让系统自动帮咱们发，这样咱们就能有更多的时间去敲代码了！！！！先说下基本思路，其实很简单啦。就是将我要发的邮件内容放到redis的一个list当中去，然后写个脚本去出队，发送邮件给妹子。咦？好像少点什么，我们还没有设定定时任务呢，例如每晚23:15分发送邮件。哈哈，我们可以使用linux的crontab服务，去设定定时任务执行脚本就可以了。是不是很简呢？下面是我的代码演示；\r\n</p>\r\n<p>\r\n	&nbsp; &nbsp; 入队:\r\n</p>\r\n<p>\r\n	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n</p>\r\n<pre class=\"prettyprint lang-php\"> public function maillist(){\r\n\r\n                $redis = new \\Redis();\r\n                $redis-&gt;connect(\'127.0.0.1\',6379);\r\n                $redis-&gt;select(3);\r\n                $list = array(\r\n                        \"***，*****************,***!!!!!!\",\r\n                        \'每天一句情话，来自于***!!!\',\r\n                        \'没有你的日子，我真的好孤单\',\r\n                        \"我***********！！！\",\r\n                        \"任时光匆匆流去，我只在乎你！！！\",\r\n                        \'***************\',\r\n                        \'生活总是不易\',\r\n                        \'哈哈，***，你看****多好，*******************\',\r\n                        \'*****************\',\r\n                        \'夜里，也要记得想我哦！\',\r\n                        \'************？\',\r\n                        \'**************\',\r\n                        \'************！！！\',\r\n                        \'*****************，***！！！！！\',\r\n                        \'good morning!!!!\',\r\n                        \'***************8！\',\r\n\r\n\r\n                );\r\n\r\n                foreach($list as $val){\r\n\r\n                        $redis-&gt;lpush(\'mail\',$val.\"from *** 现在是\".date(\'Y-m-d H:i:s\',time()));\r\n\r\n                }\r\n\r\n        }\r\n</pre>\r\n<pre class=\"prettyprint lang-php\"></pre>\r\n<pre class=\"prettyprint lang-php\">这个脚本执行一下，就算是入队了。然后我们写一个函数去出队发邮件就可以了。</pre>\r\n<pre class=\"prettyprint lang-php\">\r\n<pre class=\"prettyprint lang-php\">        public function sendlove(){\r\n\r\n                $redis = new \\Redis();\r\n                $redis-&gt;connect(\'127.0.0.1\',6379);\r\n                $redis-&gt;select(3);\r\n                $mail = $redis-&gt;lrange(\'mail\',0,-1);\r\n                //print_r($mail);exit;\r\n                $content = $redis-&gt;rpop(\'mail\');\r\n        if(isset($content)){\r\n                        $to2 = \"*****@qq.com\";\r\n                        $this-&gt;sendmail($to2,\"情书\",$content);\r\n        }\r\n\r\n                }\r\n</pre>\r\n<br />\r\n</pre>\r\n<pre class=\"prettyprint lang-php\">然后设定定时任务:</pre>\r\n<pre class=\"prettyprint lang-php\"><img src=\"/upload/ck/b1faa7181a4e22dec772a6bfe592c014.jpg\" alt=\"\" /> </pre>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	哈哈，现在每天晚上11点，妹纸就能收到我的邮件啦！！！！这样表白妹子，你还怕找不到媳妇儿？？？\r\n</p>\r\n<p>\r\n	这只是redis的冰山一角，后续将会写更多好玩儿的事情。\r\n</p>\r\n<p>\r\n	<br />\r\n</p>','upload/img/aaa1521106710.jpg',8,1521106715),(18,'什么叫 数据结构',1,'<span style=\"color:#333333;font-family:-apple-system, &quot;font-size:14px;background-color:#FFFFFF;\">数据结构就好比你的书架上的书按照什么方式摆放，</span><br />\r\n<span style=\"color:#333333;font-family:-apple-system, &quot;font-size:14px;background-color:#FFFFFF;\">算法就是怎么快速找到书架上的某一本书！</span>','upload/img/aaa1521508781.jpg',5,1521508799),(19,'算法!约瑟夫环问题  数据结构 面试高频',1,'<p>\r\n	首先，大家来看一个小故事：\r\n</p>\r\n<p>\r\n	据说着名犹太历史学家 Josephus有过以下的故事：在罗马人占领乔塔帕特后，39 个犹太人与Josephus及他的朋友躲到一个洞中，39个犹太人决定宁愿死也不要被敌人抓到，于是决定了一个自杀方式，41个人排成一个圆圈，由第1个人开始报数，每报数到第3人该人就必须自杀，然后再由下一个重新报数，直到所有人都自杀身亡为止。然而Josephus 和他的朋友并不想遵从。首先从一个人开始，越过k-2个人（因为第一个人已经被越过），并杀掉第k个人。接着，再越过k-1个人，并杀掉第k个人。这个过程沿着圆圈一直进行，直到最终只剩下一个人留下，这个人就可以继续活着。问题是，给定了和，一开始要站在什么地方才能避免被处决？Josephus要他的朋友先假装遵从，他将朋友与自己安排在第16个与第31个位置，于是逃过了这场死亡游戏。\r\n</p>\r\n<p>\r\n	这就是著名的约瑟夫环问题。加入你是Josephus，你能逃过这场自杀游戏吗？古人的智慧是不容小觑的。那21世纪的今天我们来用程序处理这个问题！\r\n</p>\r\n<p>\r\n	构思：\r\n</p>\r\n<p>\r\n	&nbsp;可以把约瑟夫环看做一个数组来对待，从第一个人开始出队，若这个人是报数3的人，则将此人出队，否则就将此人入队尾，形成新的报数数组，这是非常重要的一点，你若理解了这一点，这个算法就很简单了。给大家模拟一遍，例如有3个人，编号1,2,3围城一圈儿，数到2的人自杀。那么，我们首先将第一个人出队，也就是1出队，但1不是第2个人，所以不能自杀，将他入队尾！变成2,3,1&nbsp; 这是一个圈啊。然后第二个人2开始出队，而且他是报2的人，所以他自杀，别再归队了。此时数组变成3,1 . 此时第一个人出队完成，继续下一轮报数。继续此动作就可以了。上代码吧：\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<pre class=\"prettyprint lang-php\">&lt;?php\r\n/**\r\n* 约瑟夫环问题\r\n*/\r\nini_set(\"display_errors\", \"On\");\r\nerror_reporting(E_ALL);    //报告所有的错误\r\n$monk = new Arraystack(41);//生产一个约瑟夫环，4个元素\r\n$hand = new Jose($monk);\r\nvar_dump($hand-&gt;handler(3,2));//每次\r\nclass Arraystack\r\n{\r\n  public $stack=array();\r\n  function __construct($num)\r\n  {\r\n    $this-&gt;stack = range(1,$num);\r\n  }\r\n\r\n  //出队\r\n  public function pop(){\r\n \r\n   return  array_shift($this-&gt;stack);\r\n  }\r\n\r\n  //入队\r\n  public function push($key){\r\n    return array_push($this-&gt;stack,$key);\r\n  }\r\n\r\n  public function now(){\r\n\r\n    return $this-&gt;stack;\r\n  }\r\n}\r\n\r\n/**\r\n* 约瑟夫处理,\r\n*假设有n只猴子做成一圈儿，编号1,2,3,4,5,6,7...n\r\n*从1开始报数，数到m的时候，这只猴子出队。下一只猴子继续从1开始报数，数到m，出队...\r\n*直到剩下一只猴子，请输出最后一只猴子编号\r\n*并输出猴子的出队顺序\r\n*/\r\nclass Jose\r\n{\r\n  private $handler;\r\n  public $outlist=array();//出队结构\r\n  function __construct($object)\r\n  { \r\n    $this-&gt;handler = $object;\r\n  }\r\n\r\n  public function handler($m,$left=1){\r\n    $i=1;\r\n    while (count($this-&gt;handler-&gt;now()) &gt; $left) {\r\n  \r\n        $out = $this-&gt;handler-&gt;pop();//出队\r\n     \r\n        if($i%$m != 0){//不是m的倍数\r\n            //猴子入队尾，构成新队列\r\n          $this-&gt;handler-&gt;push($out);\r\n                $i+=1;//继续报数\r\n        \r\n        }else{\r\n          //出队的猴子就是数到m的\r\n          array_push($this-&gt;outlist,$out);\r\n          $i=1;//重新从1报数\r\n\r\n        }\r\n    }\r\n\r\n    return [\'res\'=&gt;$this-&gt;handler-&gt;now(),\'outlist\'=&gt;$this-&gt;outlist]; \r\n  }\r\n}\r\n\r\n</pre>\r\n<p>\r\n	<img src=\"/upload/ck/df7a0f75ee1816396a16d38807e7f80c.jpg\" alt=\"\" />\r\n</p>','upload/img/aaa1521541052.jpg',17,1521541607),(20,'php安装Imagick扩展 ',1,'<p>\r\n	imagick扩展是什么？哈哈哈，这是一个很有意思的问题。PHP程序员，必须知道GD库，对今天所说的imagick是GD的替代品，比他强大的一个php扩展大神，它无所不能。\r\n</p>\r\n<p>\r\n	ImageMagick是一套功能强大、稳定而且免费的工具集和开发包，可以用来读、写和处理超过185种基本格式的图片文件，包括流行的TIFF, JPEG, GIF, PNG, PDF以及PhotoCD等格式。利用ImageMagick，你可以根据web应用程序的需要动态生成图片, 还可以对一个（或一组）图片进行改变大小、旋转、锐化、减色或增加特效等操作，并将操作的结果以相同格式或其它格式保存。来自百科的解释。\r\n</p>\r\n<p>\r\n	她几乎满足了所有程序员对图片的幻想，他就是图片操作方面的苍老师！！！好了，既然这么牛逼，那今天学习一下怎么去用，搞了两个小时，终于给搞定了，为了不让更多的人进坑，顺利安装，特地把过程写下来！\r\n</p>\r\n<p>\r\n	<a href=\"http://pecl.php.net/package/imagick\" target=\"_blank\">imagick</a>是一个<a href=\"http://www.php.net/\" target=\"_blank\">PHP</a>的扩展，用<a href=\"http://www.imagemagick.org/\" target=\"_blank\">ImageMagick</a>提供的API来进行图片的创建与修改，不过这些操作已经包装到扩展imagick中去了，最终调用的是ImageMagick提供的API，因此我们想要使用这个扩展，需要安装imagemagick以及php扩展magick.\r\n</p>\r\n<p>\r\n	安装imagemagick:&nbsp; apt-get install ImageMagick&nbsp; 等待安装完毕，然后在终端输入convert --version，如果不提示错误就是安装成功了，然后就是安装扩展了。我们采用编译安装，这是一个通用的方法。\r\n</p>\r\n<p>\r\n	下载最新版： wget&nbsp; http://pecl.php.net/get/<span style=\"color:#222222;font-family:Consolas, &quot;background-color:#FFFFFF;\">/get/</span>imagick-3.4.3RC4.tgz&nbsp; &nbsp;&nbsp;\r\n</p>\r\n<p>\r\n	解压： tar -zxvf ************.tgz\r\n</p>\r\n<p>\r\n	cd 到你的解压包\r\n</p>\r\n<p>\r\n	然后执行phpize\r\n</p>\r\n<p>\r\n	./configure\r\n</p>\r\n<p>\r\n	make &amp;&amp; make install\r\n</p>\r\n<p>\r\n	一路执行下去，就能安装成功。然后在php配置文件中加入extension=imagick.so这句就可以了。不同的服务器版本，php的位置以及配置文件的目录不同，不过只要加入这句就可以了。您可以写一个phpinfo函数查看一下。\r\n</p>\r\n<p>\r\n	<img src=\"/upload/ck/cfb6bd9be345a4cd4ddf2c77cf12f2cf.jpg\" alt=\"\" /> \r\n</p>\r\n<p>\r\n	扩展安装成功了。哈哈。接下来测试一下，我传一个pdf到服务器，然后访问函数，看下是否生成了图片。代码如下：\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<pre class=\"prettyprint lang-php\">public function info(){\r\n        $raw = $this-&gt;createThumbnail(\"/var/www/html1/testpdf.pdf\",300,\'jpg\',false);\r\n        header(\"Content-type:image/jpeg\");\r\n        header(sprintf(\"Content-length:%s\",strlen($raw)));\r\n        //file_put_contents(\"/var/www/html1/xxx.jpg\",$raw);\r\n        echo $raw;exit;\r\n        }</pre>\r\n\r\n<pre class=\"prettyprint lang-php\">     public function createThumbnail($filename, $width = 500, $outputformat = \"jpg\", $base64 = true) {\r\n        $input = realpath($filename);\r\n        if (!file_exists($input)) {\r\n            return NULL;\r\n        }\r\n        $image = new \\Imagick($input);\r\n        $image-&gt;thumbnailImage($width, 0);\r\n        $image-&gt;setimageformat($outputformat);\r\n        $raw = $image-&gt;getimageblob();\r\n        $image-&gt;clear();\r\n        return $base64 ? base64_encode($raw) : $raw;\r\n    }\r\n</pre>\r\n<br />\r\n</pre>\r\n运行之后，如下图\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<img src=\"/upload/ck/588917f0b2b0da668d8470637a4df4c9.jpg\" alt=\"\" /> \r\n</p>\r\n<p>\r\n	成功了，很方便吧！快来试试吧！！！\r\n</p>','upload/img/aaa1521616788.jpg',5,1521618308),(21,'快速排序',1,'<p>\r\n	算法是编程的基础，今天来探讨一下快速排序。快速排序是对冒泡排序的改进，冒泡排序是我们接触的第一个排序算法，她是两两比较，将较大的数交换到右边，这样每经过一轮，就会排好一个数字,直到所有数字归位，时间复杂度为O（n2）.这样当n很大时，可想它的效率问题堪忧。因此，出现了快速排序。拿出一个标杆，一般是数组的第一个元素，然后遍历此数组，将比它大的元素放到它的右面，小的元素放到它的左面，然后分别递归左边的数组以及右面的数组，将结果合并一个新数组。可以看出，其实就是采用了分治法，将一个大数组，分成左右两个数组，再分别分割这些数组，直到他们都排序完好。\r\n</p>\r\n<p>\r\n	上代码，我用php实现了此排序。\r\n</p>\r\n<p>\r\n<pre class=\"prettyprint lang-php\">public function quiksort($arr){\r\n\r\n		if(count($arr) &lt;= 1){\r\n			return $arr;\r\n		}\r\n		$left = $right = array();\r\n		for ($i=1; $i&lt;count($arr); $i++) { \r\n			if($arr[$i]&gt;=$arr[0]){\r\n				$right[] = $arr[$i];\r\n			}else{\r\n				$left[] = $arr[$i];\r\n			}\r\n		}\r\n		$left = $this-&gt;quiksort($left);\r\n		$right = $this-&gt;quiksort($right);\r\n		return array_merge($left,[$arr[0]],$right);\r\n	}</pre>\r\n</p>','upload/img/aaa1521625432.jpg',24,1521626080),(22,'二分查找',1,'<p>\r\n	经典算法，回味无穷。今天特地写一篇博客来记录一下二分查找的算法。\r\n</p>\r\n<p>\r\n	二分查找，顾名思义就是二分之一查找，什么意思呢？就是从数组中挑出中间位置的数去和目标值对比，相等的话就直接返回，不想等继续在左侧或右侧继续进行这样的过程。上代码：\r\n</p>\r\n<p>\r\n<pre class=\"prettyprint lang-php\">function findnum($arr,$low=0,$high,$target){\r\n		if($low &gt;= $high){\r\n			return \'no target\';\r\n		}\r\n		$mid = floor(($low+$high)/2);\r\n		if($arr[$mid] === $target){\r\n			return $mid;\r\n		}\r\n		if($arr[$mid] &gt; $target){\r\n			$high = $mid-1;\r\n		}else{\r\n			$low = $mid+1;\r\n		}\r\n\r\n		return $this-&gt;findnum($arr,$low,$high,$target);\r\n\r\n	}</pre>\r\n这是利用分治法，无限缩短查找的长度，直到两者重合。\r\n</p>','upload/img/aaa1521713923.jpg',9,1521714814),(23,'php  遍历文件目录 递归',1,'写php一年多了，发现对它的基本函数还是不太掌握。尤其是php文件操作函数，平时对这部分也很少用到，但作为一个phper，不会操作文件，那可真说不过去了。先上一道题，请写一个函数，遍历所有给定目录的文件，\r\n返回一个数组，要具备层级关系！好了，首先拿到这道题就要思考，这肯定是递归。上代码！！！\r\n<pre class=\"prettyprint lang-php\">&lt;?php\r\nfunction getFile($path,&amp;$arr){\r\n        $open=opendir($path);\r\n        if(!$open){\r\n                return false;\r\n        }\r\n        while($file=readdir($open)){\r\n\r\n        if($file === \".\" || $file=== \'..\'){\r\n                continue;\r\n        }\r\n\r\n                if(is_dir($path.\'/\'.$file)){\r\n                        getFile($path.\'/\'.$file,$arr[$file]);\r\n\r\n                }else{\r\n                        $arr[] = $file;\r\n                }\r\n        }\r\n\r\n        return $arr;\r\n}\r\nprint_r(getFile(\"/var/www/phpframe\"));</pre>\r\n运行后：截图：<img src=\"/upload/ck/fc3484423a6b9d5a95617fb064c8a41d.jpg\" alt=\"\" /> ','upload/img/aaa1522072062.jpg',14,1522072086),(24,'这些Git命令，够你用一辈子了 ',1,'<p>\r\n	Git是我们在开发中经常用到的版本控制工具，它的强大的命令，以及github的托管让我们无比方便。有了git,我们再也不怕误删，误操作了，一个命令回退到指定的版本。那废话不多说，赶紧来看看git怎么使用吧！\r\n</p>\r\n<p>\r\n	首先安装git，linux中安装较为简单，如在ubuntu系统中，终端运行apt install git即可。windows上请百度搜索git for windows安装即可，全是傻瓜式安装。开始用一个项目来说明使用流程。\r\n</p>\r\n<p>\r\n	例如我们团队几个小伙伴临时起意，要开发一个苍老师的在线视频平台，因此第一步我们去github创建了一个项目，AAV video，哈哈。然后呢，我们打开git bash。\r\n</p>\r\n<p>\r\n	命令:\r\n</p>\r\n<p>\r\n	1,&nbsp; &nbsp;cd /var/www&nbsp; &nbsp; &nbsp; 进入到var/www目录，\r\n</p>\r\n<p>\r\n	2，&nbsp; git clone http://github.com/xxxxx/xxx.git&nbsp; &nbsp; 克隆刚刚创建的项目到本机\r\n</p>\r\n<p>\r\n	3,&nbsp; &nbsp;ls -al 看一下本地已经有一个文件夹了，成功。\r\n</p>\r\n<p>\r\n	说一下经常用到的:\r\n</p>\r\n<p>\r\n	git init&nbsp; &nbsp;初始化一个git仓库,\r\n</p>\r\n<p>\r\n	git clone&nbsp; &nbsp; 克隆一个远程项目代码到本地\r\n</p>\r\n<p>\r\n	git status&nbsp; 这是git最常用的一个命令，用来显示目前版本库中的所有变化，其中change to ben commit 是暂存区中的文件,\r\n</p>\r\n<p>\r\n	Changes not staged for commit:是秀归国暂时未放入暂存区的文件，Untracked files:未被git追踪的文件。\r\n</p>\r\n<p>\r\n	git add&nbsp; &nbsp; &nbsp;可以把不在暂存区或者未被跟踪的文件放入暂存区,git commit 把暂存区的文件提交到暂存区。\r\n</p>\r\n<p>\r\n	我们在开发过程中，不免会犯很多错误，下面说几条常犯的错误.\r\n</p>\r\n<p>\r\n	1,加入到暂存区后，想要撤回。请使用git reset HEAD filename&nbsp;&nbsp;\r\n</p>\r\n<p>\r\n	2,工作的文件修改后想要回到之前的状态,git checkout filename\r\n</p>\r\n<p>\r\n	3,已经提交到当前分支的，不想要了，git reset HEAD^\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	再说几条跟远程主机相关的，\r\n</p>\r\n<p>\r\n	git pull origin master&nbsp; 拉取origin 的 master分支到本地\r\n</p>\r\n<p>\r\n	git push origin master&nbsp; 推送本地matser分支到远程主机的master分支\r\n</p>\r\n<p>\r\n	git checkout -b branchname&nbsp; &nbsp;建立一个本地分支并切换到此分支\r\n</p>\r\n<p>\r\n	git merge branchname&nbsp; 合并分支\r\n</p>\r\n<p>\r\n	如有需要，再更新。\r\n</p>','upload/img/aaa1522809186.jpg',11,1522812264),(25,'php  读取文本文件，遍历每一行',1,'<p>\r\n	在日常开发中，我们经常遇到操作文本文档的需求，比如在做系统管理开发中，管理员如果对于某个列表要逐个添加，那将是非常费事儿的。因此，批量导入是一个很好的点子。\r\n</p>\r\n<p>\r\n	好的，那这个需求其实在php中相当容易实现，而且这个东西在面试中也会经常遇到！首先介绍两个函数。\r\n</p>\r\n<p>\r\n	1，fopen()&nbsp;\r\n</p>\r\n<p>\r\n	这个函数是读取文件的函数，成功时将返回一个文件资源，后面可以跟上模式。\r\n	<ul style=\"color:#333333;font-family:&quot;font-size:13px;background-color:#F6F4F0;\">\r\n		<li>\r\n			\"r\" （只读方式打开，将文件指针指向文件头）\r\n		</li>\r\n		<li>\r\n			\"r+\" （读写方式打开，将文件指针指向文件头）\r\n		</li>\r\n		<li>\r\n			\"w\" （写入方式打开，清除文件内容，如果文件不存在则尝试创建之）\r\n		</li>\r\n		<li>\r\n			\"w+\" （读写方式打开，清除文件内容，如果文件不存在则尝试创建之）\r\n		</li>\r\n		<li>\r\n			\"a\" （写入方式打开，将文件指针指向文件末尾进行写入，如果文件不存在则尝试创建之）\r\n		</li>\r\n		<li>\r\n			\"a+\" （读写方式打开，通过将文件指针指向文件末尾进行写入来保存文件内容）\r\n		</li>\r\n		<li>\r\n			\"x\" （创建一个新的文件并以写入方式打开，如果文件已存在则返回 FALSE 和一个错误）\r\n		</li>\r\n		<li>\r\n			\"x+\" （创建一个新的文件并以读写方式打开，如果文件已存在则返回 FALSE 和一个错误）\r\n		</li>\r\n	</ul>\r\n	<p>\r\n		2，feof&nbsp; &nbsp; 此函数检测是否读取到文件末尾，若到了尾部返回true,否则false\r\n	</p>\r\n	<p>\r\n		3，fgets&nbsp; 返回当前行的数据\r\n	</p>\r\n	<p>\r\n		上代码,\r\n	</p>\r\n	<p>\r\n<pre class=\"prettyprint lang-php\">$handle=fopen($path);\r\n$res = array(); \r\nwhile(!feof($handle))\r\n        {  \r\n            $row=fgetss($handle,2048);  \r\n            array_push($res,$row);\r\n\r\n        }\r\n        return $res;</pre>\r\n	</p>\r\n</p>','',3,1523587952),(26,'python3 爬虫下载视觉中国图片',1,'<p>\r\n	python还是很强大的，很久没玩儿python,刚发现视觉中国有很多好看的图片，一张一张下载也太麻烦了吧？哈哈哈，幸亏我们还有python。直接上代码吧，大家可以试一下。\r\n</p>\r\n<pre class=\"prettyprint lang-py\">import requests\r\nfrom urllib import request\r\nclass Fetch(object):\r\n	\"\"\"docstring for Fetch\"\"\"\r\n	def __init__(self, url):\r\n		self.url = url\r\n		self.getUrls()\r\n	def getUrls(self):\r\n		headers = {\'User-Agent\': \'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Safari/537.36\'}\r\n		res=requests.get(self.url,headers=headers)\r\n		print(res.status_code)\r\n		# print(res.json())\r\n		data=res.json()\r\n		for k in range(0,len(data[\'list\'])):\r\n			print(data[\'list\'][k][\'equalh_url\'],\'downloading.......\',\'\\n\')\r\n			savepath= \"D:/imagesave/%d.jpg\" %(k);\r\n			print(savepath)\r\n			request.urlretrieve(\"https:%s\" %(data[\'list\'][k][\'equalh_url\']),savepath)\r\nfetch1=Fetch(\"https://www.vcg.com/api/common/searchImage?utm_source=baidu&amp;utm_medium=sem&amp;utm_term=20180408\")</pre>\r\n<p>\r\n	<br />\r\n</p>','upload/img/aaa1523595196.jpg',11,1523595236),(27,'python 网络编程之TCP',1,'<p>\r\n	Tcp是计算机通信协议之一，与之相对的还有UDP。先看一段tcp的百科：\r\n</p>\r\n<p>\r\n	<span style=\"color:#E56600;\"><strong>TCP（Transmission Control Protocol&nbsp;</strong></span><span style=\"color:#E56600;\"><strong>传输控制协议</strong></span><span style=\"color:#E56600;\"><strong>）是一种面向连接的、可靠的、基于字节流的</strong></span><span style=\"color:#E56600;\"><strong>传输层</strong></span><span style=\"color:#E56600;\"><strong>通信协议，由IETF的RFC 793定义。在简化的计算机网络OSI模型中，它完成第四层传输层所指定的功能，用户数据报协议（UDP）是同一层内</strong></span><span style=\"color:#E56600;\"><strong>[1]</strong></span><span style=\"color:#E56600;\"><strong>另一个重要的传输协议。在因特网协议族（Internet protocol suite）中，TCP层是位于IP层之上，应用层之下的中间层。不同主机的应用层之间经常需要可靠的、像管道一样的连接，但是IP层不提供这样的流机制，而是提供不可靠的包交换</strong></span><span style=\"color:#E56600;\"><strong>。</strong></span> \r\n</p>\r\n<p>\r\n	<span><b>上面的文字读起来是相当拗口的，也不易理解，这也就是为什么我们总是还没入门儿就放弃了。世界上存在很多台计算机，但是我们怎么把他们连接起来呢？两台计算机之间怎么通信？这成为了一大课题。还好，聪明的人们发明了TCP/IP。TCP/ip实现了计算机之间的相互通信，大致分为应用层，网络层，传输层等，也成为七层模型。而TCP就属于传输层的协议之一，他的兄弟叫udp。</b></span> \r\n</p>\r\n<p>\r\n	<span><b>上代码吧，代码是最好的语言，python3实现。</b></span> \r\n</p>\r\n<p>\r\n	<span><b>服务端代码：</b></span> \r\n</p>\r\n<p>\r\n	<span><b> </b></span> \r\n</p>\r\n<pre class=\"prettyprint lang-py\"><b>import socket\r\nimport sys\r\nimport time\r\nimport threading\r\ndef connectlink():\r\n	server=socket.socket(socket.AF_INET,socket.SOCK_STREAM)\r\n	server.bind((\'127.0.0.1\',6005))\r\n	server.listen(6)\r\n	print(\'waitting for connecting...\')\r\n	while True:\r\n		sock,addr=server.accept()\r\n		t=threading.Thread(target=threadlink,args=(sock,))\r\n		t.start()\r\n		# print(sock,addr)\r\ndef threadlink(sock,):\r\n		print(\"accept new connections\")\r\n		while True:\r\n			data=sock.recv(1024).decode(\'utf-8\')\r\n			if data:\r\n				print(data)\r\n				mmm=\"have recieved data :%s\" % data\r\n				sock.send(mmm.encode(\'utf-8\'))\r\nif __name__==\"__main__\":\r\n		connectlink()</b></pre>\r\n<b> 客户端:\r\n<pre class=\"prettyprint lang-py\">\r\n\r\n<pre class=\"prettyprint lang-py\">import socket\r\ns = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\r\ns.connect((\'127.0.0.1\', 6005))\r\nwhile True:\r\n	msg=input(\"please input：\")\r\n	if not msg:\r\n		break\r\n	s.send(msg.encode(\'utf-8\'))\r\n	data=s.recv(1024)\r\n	print(data.decode(\'utf-8\'))</pre>\r\n效果:\r\n<img src=\"/upload/ck/8173093780d3e548c2177731ba269ca2.jpg\" alt=\"\" />','upload/img/aaa1523872590.jpg',12,1523872603),(28,'sql查询IN数组 怎么玩儿',1,'<p>\r\n	sql语句，是php程序员必备的一项技能。今天这篇博客抬一下where in数组的情况。这是一种大家经常遇到的情况。其实我们只要坐下来仔细分析，就能做好。\r\n</p>\r\n<p>\r\n	首先说一下它的标准结构，select ... from xxx where xx in (\'xx\',\'xx\',\'xx\'....)\r\n</p>\r\n<p>\r\n	php中如果是数字的话，比如$id = array(1,2,3,65,8),我们只需使用implode(\',\',$id)即可。\r\n</p>\r\n<p>\r\n	但是如果查询的是字符串，就要使用$res = implode(\"\',\'\",$id);\r\n</p>\r\n<p>\r\n	in (\'$res\').\r\n</p>\r\n<p>\r\n	聪明的你，看出来怎么使用了吗\r\n</p>','upload/img/aaa1524042499.jpg',7,1524042737),(29,'正则表达式',1,'<p>\r\n	好久没更博客了，今天来讲讲一个很重要的玩意儿---正则表达式！没错，这个高大上的家伙。\r\n</p>\r\n<p>\r\n	什么是正则表达式呢，其实就是一套匹配规则。比如你老板给你一个名单列表，让你筛选出所有名字含有花、佳、兮这些字的妹纸的姓名，想想看，如果老板甩给你的是一个含有百万级的数据，你怎么做？\r\n</p>\r\n<p>\r\n	肯定是写程序啊，计算机能够快速计算，但前提我们要写好程序给计算机去运行啊。这个时候就能用到正则表达式啦，只需要写出匹配规则，就能将这些人名匹配出来。在平时的开发中，我们经常遇到正则表达式。比如邮箱验证，手机号码验证，数字验证以及按照我们想要的任何格式。\r\n</p>\r\n<p>\r\n	学习正则表达式前，先学习一下它的基本的字符。\r\n</p>\r\n<p>\r\n	\\s&nbsp; &nbsp;空白字符\r\n</p>\r\n<p>\r\n	\\S 非空白字符\r\n</p>\r\n<p>\r\n	\\d 数字\r\n</p>\r\n<p>\r\n	\\D非数字\r\n</p>\r\n<p>\r\n	\\w&nbsp; 小写字母，大写字母，数字，_下划线\r\n</p>\r\n<p>\r\n	\\W 非上行\r\n</p>\r\n<p>\r\n	.&nbsp; 除换行符 \\n 外任意字符\r\n</p>\r\n<p>\r\n	\\n&nbsp; 换行符\r\n</p>\r\n<p>\r\n	\\r&nbsp; 回车\r\n</p>\r\n<p>\r\n	再说一些表示次数的字符\r\n</p>\r\n<p>\r\n	+ 至少1次\r\n</p>\r\n<p>\r\n	？ 0-1次\r\n</p>\r\n<p>\r\n	* 0次或者无限次\r\n</p>\r\n<p>\r\n	{n,m} n-m 次\r\n</p>\r\n<p>\r\n	^ 以什么开始\r\n</p>\r\n<p>\r\n	$ 以什么结尾\r\n</p>\r\n<p>\r\n	基本上了解这么多，我们就能随意地驰聘在正则表达式的海洋中。举几个例子\r\n</p>\r\n<p>\r\n	url正则：\r\n</p>\r\n<p>\r\n	(https|http)://\\w+(\\.\\w+)+\r\n</p>\r\n<p>\r\n	中国大陆手机号\r\n</p>\r\n<p>\r\n	1(3|5|8|9)[0-9]{9,}&nbsp;\r\n</p>\r\n<p>\r\n	邮箱地址：\r\n</p>\r\n<p>\r\n	\\w+(\\.\\w+)*@([a-zA-Z0-9][a-zA-Z0-9]+\\.)+[a-zA-Z]{2,}\r\n</p>\r\n<p>\r\n	总之运用这些元字符可以很好地写出高效的匹配表达式！\r\n</p>','upload/img/aaa1526287360.jpg',8,1526288552),(30,'python爬取嗅事百科',1,'<p>\r\n	平时工作中比较闲的时候，偶尔也用python爬取一些资源。每次下班回家，在地铁上都是极其无聊的。正好，闲来没事儿可做，就用python爬一下嗅事百科吧，下班路上再也不怕无聊啦！！！\r\n</p>\r\n<pre class=\"prettyprint lang-py\">\r\n\r\n<p>\r\n	import requests\r\n</p>\r\nimport re\r\nfrom bs4 import BeautifulSoup\r\n#main proccess to fetch the stories from web\r\ndef getPage(page):\r\n	url=\"https://www.qiushibaike.com/text/page/%d/\" % (page)\r\n	r=requests.get(url)\r\n	content=r.text\r\n	soup = BeautifulSoup(content,\'html.parser\')\r\n	s=soup.find_all(\'div\',attrs={\'id\':re.compile(\"qiushi_tag_\\d+\")})\r\n	for x in s:\r\n		ass=x.find(\'a\',attrs={\'class\':\'contentHerf\'}).find(\'div\',attrs={\'class\':\'content\'}).find(\'span\').string\r\n		if ass:\r\n			file=open(\"D:/jo.txt\",\'a\')\r\n			file.write(ass)\r\n			print(ass,\'writing into the file...\')\r\nfor x in range(1,2):\r\n	getPage(x)</pre>\r\n<br />','upload/img/aaa1526289883.jpg',19,1526289902),(31,'帮帮小Q，算法 思维训练题',1,'<p>\r\n	闲着是最大的不幸！我是一个不是很极端的人，我热爱生活，热爱写代码，但我真的觉得生活是极其无奈的。为了更好滴生活，那就往上走吧！每天一题，今天带来网易的一道面试题。\r\n</p>\r\n<p>\r\n	<strong>t1小Q得到一个神奇的数列: 1, 12, 123,...12345678910,1234567891011...。</strong> \r\n</p>\r\n<br />\r\n<strong>并且小Q对于能否被3整除这个性质很感兴趣。</strong><br />\r\n<br />\r\n<p>\r\n	<strong>小Q现在希望你能帮他计算一下从数列的第l个到第r个(包含端点)有多少个数可以被3整除。</strong> \r\n</p>\r\n<p>\r\n	<b>编程要求，输入 2,5，表示可以从12,123,12345,123456四个数中查找能被三整除的数有多少个，输出：3</b> \r\n</p>\r\n<p>\r\n	<b>请变成解决。</b> \r\n</p>\r\n<p>\r\n	<b>我是php的热衷粉丝，那就用php来解决吧！直接看代码</b> \r\n</p>\r\n<p>\r\n	<b><br />\r\n</b> \r\n</p>\r\n<p>\r\n	<b> </b>\r\n</p>\r\n<pre class=\"prettyprint lang-php\"><b>&lt;?php \r\n/**\r\n* t1小Q得到一个神奇的数列: 1, 12, 123,...12345678910,1234567891011...。\r\n\r\n并且小Q对于能否被3整除这个性质很感兴趣。\r\n\r\n小Q现在希望你能帮他计算一下从数列的第l个到第r个(包含端点)有多少个数可以被3整除。\r\n\r\n*/\r\nclass Test1\r\n{\r\n	public $data;\r\n	public $res;\r\n	function __construct()\r\n	{\r\n			$this-&gt;createdata(10);\r\n			$this-&gt;nowData();\r\n	}\r\n	public function createdata($n){\r\n\r\n		for($i=1;$i&lt;=$n;$i++){\r\n\r\n			$this-&gt;data[$i] = self::getNdata($i);\r\n\r\n		}\r\n	}\r\n\r\n	private static function getNdata($n){\r\n		$target = 0;\r\n		for($i=1;$i&lt;=$n;$i++){\r\n			$target += $i*pow(10,$n-$i);\r\n		}\r\n		return $target;\r\n	}\r\n\r\n\r\n	private function nowData(){\r\n		print_r($this-&gt;data);\r\n		return $this-&gt;data;\r\n	}\r\n\r\n\r\n	public function getRes($st,$en,$s=3){\r\n\r\n		for($i=$st;$i&lt;=$en;$i++){\r\n			if(($this-&gt;data[$i] % $s) === 0){\r\n				print_r($this-&gt;data[$i]);\r\n				echo \"is ok...\".\"\\r\\n\";\r\n				$this-&gt;res+=1;\r\n			}\r\n		}\r\n	}\r\n\r\n\r\n	public function getNum(){\r\n		print_r($this-&gt;res);\r\n	}\r\n\r\n}\r\n\r\n$da = new Test1();\r\n$da-&gt;getRes(2,5);\r\n$da-&gt;getNum(); </b></pre>\r\n<b> <br />\r\n</b> \r\n<p>\r\n	测试后截图：\r\n</p>\r\n<p>\r\n	<img src=\"/upload/ck/93190ecf63b42f445f447ad462f4a652.jpg\" alt=\"\" />\r\n</p>\r\n<p>\r\n	<b><br />\r\n</b> \r\n</p>\r\n<p>\r\n	<br />\r\n</p>','upload/img/aaa1526458127.jpg',86,1526458393),(32,'工作久了，总觉得遗失了最初的自己',1,'<p>\r\n	工作也有将近一年了，每天坐在回家的地铁上，总会陷入沉思。不知道为什么，就是觉得自己的理想遗失了。\r\n</p>\r\n<p>\r\n	我，以前是一个自由自在，不受拘束的少年，现在呢，变成了畏手畏脚的一个人！我想，是工作磨掉了自己的一些锐气。想一想现在已经24岁了，已经不小了，却还在敲代码，拿着微薄的薪资，这种日子什么时候是个头啊！\r\n</p>\r\n<p>\r\n	长大了，总会发现有些事情难以控制，总是被生活左右了。\r\n</p>\r\n<p>\r\n	行路难，行路难，难以上青天！\r\n</p>\r\n<p>\r\n	转眼间到了下班时间了，现在就撤吧！回到家，躺在床上，喝一杯冰可乐，岂不是也很爽！<br />\r\n走吧，走吧，人总要学着自己长大！\r\n</p>','upload/img/aaa1526550626.jpg',43,1526551404),(33,'python 实现WEB HTTP 服务',1,'<p>\r\n	玩儿过php的人都知道，我们习惯用apache 作为web服务，现在横空出世了一个nginx ，也是特别流行的。什么叫web服务呢，有没有想过，我们在浏览器输入url地址后，后面发生了什么呢？\r\n</p>\r\n<p>\r\n	web服务器会接受我们的请求，然后处理我们的这个请求地址，最后响应给客户端。那么我们用python怎么实现这个功能呢？\r\n</p>\r\n<p>\r\n	上代码\r\n</p>\r\n<p>\r\n<pre class=\"prettyprint lang-py\">#-*- coding:utf-8 -*-\r\nimport BaseHTTPServer\r\nimport json\r\nimport os\r\nimport sys\r\nimport time\r\nfrom six.moves.socketserver import ThreadingMixIn\r\nfrom six.moves.urllib.parse import urlparse, unquote_plus\r\nclass RequestHandler(BaseHTTPServer.BaseHTTPRequestHandler):\r\n    Page = \'\'\'\\\r\n        &lt;html&gt;\r\n        &lt;body&gt;\r\n        &lt;p&gt;Hello, python http!&lt;/p&gt;\r\n        &lt;/body&gt;\r\n        &lt;/html&gt;\r\n    \'\'\'\r\n    \r\n    def do_GET(self):\r\n        fullpath=self.path\r\n        print(fullpath)\r\n        self.responsedata()\r\n\r\n    def do_POST(self):\r\n        length = int(self.headers[\'content-length\'])\r\n        data = self.rfile.read(length)\r\n        pathinfo = self.__parsepath(self.path)\r\n        (mod, funcname) = self.__getfunc(pathinfo)\r\n        print(mod, funcname)\r\n        self.send_response(200)\r\n        self.send_header(\"Content-Type\", \"application/json\")\r\n        self.end_headers()\r\n        self.__output({\'list\':})\r\n\r\n\r\n    def __getfunc(self, pathinfo):\r\n        try:\r\n            mod = __import__(pathinfo[\"path\"][\"segments\"][0], globals(), locals(), pathinfo[\"path\"][\"segments\"][1], -1 if six.PY2 else 0)\r\n            return (mod, pathinfo[\"path\"][\"segments\"][1])\r\n        except Exception as ex:\r\n            print(ex)\r\n            return (pathinfo[\"path\"][\"segments\"][0] if len(pathinfo[\"path\"][\"segments\"]) &gt; 0 else None, pathinfo[\"path\"][\"segments\"][1] if len(pathinfo[\"path\"][\"segments\"]) &gt; 1 else None)\r\n        \r\n\r\n    def responsedata(self):\r\n        self.send_response(200)\r\n        self.send_header(\"Content-Type\", \"text/html\")\r\n        self.send_header(\"Content-Length\", str(len(self.Page)))\r\n        self.end_headers()\r\n        self.wfile.write(self.Page)\r\n\r\n    def __output(self, data):\r\n        if six.PY2: \r\n            if type(data) != str and type(data) != six.text_type:\r\n                data = json.dumps(data)\r\n        elif six.PY3:\r\n            if type(data) != str and type(data) != bytes:\r\n                data = json.dumps(data)\r\n        try:\r\n            self.wfile.write(data.encode(\'utf8\'))\r\n            if six.PY2:\r\n                self.wfile.close()\r\n        except Exception as ex:\r\n            logger.error(ex, extra = self.__getextra())\r\n\r\n    def __parsepath(self, path):\r\n        pr = urlparse(path)\r\n        parts = pr.path.split(\'/\')\r\n        pathlist = []\r\n        for part in parts:\r\n            if part != \'\':\r\n                pathlist.append(part)\r\n        if pr.query != \'\':\r\n            parts = pr.query.split(\'&amp;\')\r\n            query = {}\r\n            for part in parts:\r\n                if part.find(\"=\") &gt;= 0:\r\n                    (name, value) = part.split(\"=\")\r\n                    query[unquote_plus(name)] = unquote_plus(value)\r\n                else:\r\n                    query[unquote_plus(part)] = None\r\n        else:\r\n            query = None\r\n        ret = {\r\n            \'path\': {\r\n                \'fullpath\': pr.path,\r\n                \'segments\': pathlist\r\n            },\r\n            \'query\': query\r\n        }\r\n        return ret\r\n\r\nclass ThreadHttpServer(ThreadingMixIn,BaseHTTPServer.HTTPServer):\r\n    pass\r\n        \r\nif __name__ == \'__main__\':\r\n    serverAddress = (\'\', 8080)\r\n    server = ThreadHttpServer(serverAddress, RequestHandler)\r\n    server.serve_forever()</pre>\r\n</p>','upload/img/aaa1528869349.jpg',7,1528869528),(34,'PHP 基础之 分页类',1,'<p>\r\n	分页场景是我们平时开发中经常用到的场景，尤其是列表页，后台管理界面，分页是必须的。你可能使用过MVC框架封装的分页类，只要传入几个参数就能使用，但你有没想过内部怎么实现的？\r\n</p>\r\n<p>\r\n	俗话说得好，授人以鱼不如授人以渔，学会方法最重要。我只想说依赖框架的php程序员 不是一个好孩子，不分男女。今天在这里，一步步去实现这个分页类。\r\n</p>\r\n<p>\r\n	首先，我们要明白，分页的目的。因为我们的数据太多，总不能一锅端地展现在大家面前，这样数据太多了，容易审美疲劳，最重要的是数据太多就显得杂乱无章。因此，我们就有了分页的需求，通过url地址栏上的一个页码参数，去数据库做sql查询。因此我们就很简单了。\r\n</p>\r\n<p>\r\n	现在的需求就是，给你一个业务的总数据条数，请你设计一个类，使得我们只要传入总条数，和每页个数，以及分页页码数量，就能得到一个分页数组，分别为页码对应连接的形式。怎么做？其实，挺简单。首先我们在分页类构造函数里，为属性赋值，这些属性包括 总条数、当前页码、每页数量等。 然后再另一个方法里去计算，最大页码，以及各种条件判断，之后生产所需的数据格式就行，直接贴个代码吧。\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<pre class=\"prettyprint lang-php\">&lt;?php  \r\nnamespace app\\helper;\r\n\r\nclass Page{  \r\n    protected $count;       \r\n    protected $showPages;  \r\n    protected $countPages; \r\n    protected $currPage;  \r\n    public $size;     \r\n    protected $href; \r\n    public $start_num;\r\n    protected $page_arr=array();\r\n   \r\n    public function __construct($count,$showPages,$currPage,$size,$href=\'\'){  \r\n        $this-&gt;count=$count;  \r\n        $this-&gt;showPages=$showPages;  \r\n        $this-&gt;currPage=$currPage;  \r\n        $this-&gt;size=$size; \r\n        $this-&gt;start_num = ($this-&gt;currPage-1)*($this-&gt;size);\r\n        if(empty($href)){  \r\n            $this-&gt;href=htmlentities($_SERVER[\'PHP_SELF\']);   \r\n        }else{  \r\n            $this-&gt;href=$href;  \r\n        }  \r\n        $this-&gt;Create_Page();  \r\n    }  \r\n\r\n\r\n    public function getPages(){  \r\n        return $this-&gt;page_arr;  \r\n    }  \r\n   \r\n\r\n    public function showPages($style=1){  \r\n        $func=\'pageStyle\'.$style;  \r\n        return $this-&gt;$func();  \r\n    }  \r\n   \r\n\r\n    protected function pageStyle1(){  \r\n\r\n        // $pageStr=\'共\'.$this-&gt;count.\'条记录，每页显示\'.$this-&gt;size.\'条\';  \r\n        // $pageStr.=\'当前第\'.$this-&gt;currPage.\'/\'.$this-&gt;countPages.\'页 \';  \r\n    $pageStr = \"\";\r\n        $_GET[\'p\'] = 1;  \r\n        $pageStr.=\'&lt;li&gt;&lt;a href=\"\'.$this-&gt;href.\'?\'.http_build_query($_GET).\'\"&gt;首页&lt;/a&gt; &lt;/li&gt;\';  \r\n        if($this-&gt;currPage&gt;1){  \r\n            $_GET[\'p\'] = $this-&gt;currPage-1;  \r\n            $pageStr.=\'&lt;li&gt;&lt;a href=\"\'.$this-&gt;href.\'?\'.http_build_query($_GET).\'\"&gt;上页&lt;/a&gt;&lt;/li&gt;\';  \r\n        }  \r\n   \r\n        foreach ($this-&gt;page_arr as $k =&gt; $v) {  \r\n            $_GET[\'p\'] = $k;  \r\n            $pageStr.=\'&lt;li&gt;&lt;a href=\"\'.$v.\'\"&gt;\'.$k.\'&lt;/a&gt;&lt;/li&gt;\';  \r\n        }  \r\n   \r\n        if($this-&gt;currPage&lt;$this-&gt;countPages){  \r\n            $_GET[\'p\'] = $this-&gt;currPage+1;  \r\n            $pageStr.=\'&lt;li&gt;&lt;a href=\"\'.$this-&gt;href.\'?\'.http_build_query($_GET).\'\"&gt;下页&lt;/a&gt;&lt;/li&gt;\';  \r\n        }  \r\n   \r\n        $_GET[\'p\'] = $this-&gt;countPages;  \r\n        $pageStr.=\'&lt;li&gt;&lt;a href=\"\'.$this-&gt;href.\'?\'.http_build_query($_GET).\'\"&gt;尾页&lt;/a&gt;&lt;/li&gt;\';  \r\n   \r\n        return $pageStr;  \r\n    }  \r\n\r\n\r\n    protected function Create_Page(){  \r\n        $this-&gt;countPages=ceil($this-&gt;count/$this-&gt;size);  \r\n        $leftPage_num=ceil($this-&gt;showPages/2);  \r\n        $rightPage_num=$this-&gt;showPages-$leftPage_num;  \r\n        $left=$this-&gt;currPage-$leftPage_num;  \r\n        $left=max($left,1); \r\n        $right=$left+$this-&gt;showPages-1; \r\n        $right=min($right,$this-&gt;countPages);  \r\n        $left=max($right-$this-&gt;showPages+1,1);  \r\n        for ($i=$left; $i &lt;= $right; $i++) {  \r\n            $_GET[\'p\'] = $i;  \r\n            $this-&gt;page_arr[$i]=$this-&gt;href.\'?\'.http_build_query($_GET);  \r\n        }  \r\n    }  \r\n}  </pre>\r\n<p>\r\n	<br />\r\n</p>','upload/img/aaa1529050791.jpg',134,1529051338),(35,'git 工作流',1,'<p>\r\n	好久没更新过博客了，最近确实是有些累啊。程序员加班狗，你们懂得。不扯太多闲话了，想聊天可以加我微信，哈哈。\r\n</p>\r\n<p>\r\n	今天说下git，作为一个标准的程序狗，我想你必须用过git版本控制工具吧？git是什么呢？就是一个程序开发团队协助神器呗。git可以在github上免费建立项目仓库，仓库建立之初有一个master分支，你可以看做是爸爸，就是祖先的意思了。然后每个人都克隆到自己本地，进行开发，开发完成就提交到远程，这样大家就能协助开发了。当然了，git大家都是用得很熟练了，但工作流相必还有很多朋友没搞明白。今天，咱们就详细说道说道。\r\n</p>\r\n<p>\r\n	首先我们认识一个概念-------分支。什么叫分支呢，他们是并行的关系。也就是说你的项目呢建立之初有一个master分支，这是主分支，这个分支我们一般部署在服务器上，是最稳定的代码。我们开发的时候呢？会建立另外的一个分支，比如dev。大家都在dev上做开发，提交代码.dev 上测试没问题了我们再将dev分支合并到master分支。这就是分支的概念。我们可以根据项目需求建立多个分支。\r\n</p>\r\n<p>\r\n	随着你不断的在某个分支上的提交，git就像一条线一样往前延伸，其中head指向当前分支。如果此时老板说线上有一个紧急的bug出现，要你去解决？那怎么办呢？为了不影响代码，我们可以checkout出一个新的bug分支出来，此时head指向bug分支，这套代码和之前的一模一样因为位于同一commit点，此时你可以解决bug，之后提交没问题就合并就可以了。\r\n</p>','upload/img/aaa1532570583.jpg',7,1532570585),(36,'Redis 单例封装类',1,'<p>\r\n	很久没更新博客了，因为可能最近有些恍惚。写博客能使人变得专心，今天没什么新鲜的可说，来说说redis吧。既然我们经常要使用redis那势必要OOP一下，对吧。\r\n</p>\r\n<p>\r\n	我们用到redis的地方很多，如果用到一次我们就new一次，那是会有很多冗余代码，一点儿都不简洁。另外，在一次请求中，如果我们多处用到了redis那如果我们不使用单例模式，那也会造成资源的浪费。不废话了，上一段代码看看。\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<pre class=\"prettyprint lang-php\">&lt;?php \r\nnamespace helper;\r\n/**\r\n*redis operate class\r\n*author:silaschen\r\n*wechat:talentchensw\r\n*redis 单例模式\r\n*/\r\nclass redisClient\r\n{\r\n	public static $client;\r\n	private $redis;\r\n	private function __clone(){} \r\n\r\n	private function __construct()\r\n	{\r\n		$rediscfg = \\config\\Config::$redis;\r\n		$this-&gt;redis = new \\Redis();\r\n		$this-&gt;redis-&gt;connect($rediscfg[\'host\'],$rediscfg[\'port\']);\r\n		if(isset($rediscfg[\'db\'])){\r\n			$this-&gt;redis-&gt;select($rediscfg[\'db\']);\r\n		}\r\n	}\r\n\r\n	/**\r\n	* static function provide client of class\r\n	*anywhere to get instance using \\helper\\redisClient::client()\r\n	*/\r\n	public static function client(){\r\n		if(!self::$client){\r\n			self::$client = new self();\r\n		}\r\n		return self::$client;\r\n	}\r\n\r\n\r\n	/**\r\n	*this is a express way to use redis func\r\n	*for example:callAction\r\n	*/\r\n    public function callAction($name, $arguments=array()) {\r\n        return call_user_func_array(array($this-&gt;redis, $name), $arguments);\r\n    }\r\n\r\n}</pre>\r\n我特别想说的是callaction这个方法，有了它其实我们就能直接使用redis提供的所有函数了。\r\n<p>\r\n	<br />\r\n</p>','upload/img/aaa1533720136.jpg',11,1533720102),(37,'mysql sql 查询之group by',1,'<p>\r\n	各位小伙伴，趁着时光正好，刚坐到工位上，现在有些节奏感。那我们谈谈sql 查询之group by 吧。顾名思义，group by 就是分组了。比如有一张订单表，字段分别为id,userid,money,numbers,pid,addtime.那么老板提然说有一个需求，他需要你帮他导出一份儿迄今为止每个人订单总额，那么问题来了怎么做呢？显而易见，要根据userid分组啦，这样写sql就对了：<span style=\"color:#E53333;\">select userid,sum(money) from order group by userid </span>。\r\n</p>\r\n<p>\r\n	老板还不死心，他说再要你帮他整一份儿用户购买最多的商品，而且从高到低排行，这是基本需求，你也得满足是不，上sql： <span style=\"color:#E53333;\">select pid,sum(num) as total from order group by pid order by total desc.</span> \r\n</p>\r\n<p>\r\n	这时候经理来了对你说他需要一份份儿用户最近一次的购物数据集，那我们也不敢反对啊，来上SQL: <strong><span style=\"color:#E53333;\">select * from order where id in (select max(id) from order group by userid</span></strong><strong><span style=\"color:#E53333;\">) order by id desc</span></strong> \r\n</p>','upload/img/aaa1533864976.jpg',6,1533864900);
/*!40000 ALTER TABLE `blog` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `blog_comment`
--

DROP TABLE IF EXISTS `blog_comment`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `blog_comment` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `blogid` int(11) NOT NULL,
  `content` text NOT NULL,
  `time` int(11) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=30 DEFAULT CHARSET=utf8mb4;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `blog_comment`
--

LOCK TABLES `blog_comment` WRITE;
/*!40000 ALTER TABLE `blog_comment` DISABLE KEYS */;
INSERT INTO `blog_comment` VALUES (13,11,'可以，亚马逊卡伊免费用一年，很方便。按照你说的，搞了3个小时，现在正在看YouTube',1518511768),(14,11,'老大可以出个视频教程吗，小白看不懂',1518564655),(15,1,'加油',1518565537),(16,11,'多谢，google 无压力',1519451679),(17,19,'牛逼，看过很多解法都不明白我。现在终于懂了，多谢楼主',1521543656),(18,21,'递归真6',1521631208),(19,27,'不错，什么时候出一篇websocket',1523959701),(20,16,'xxxx',1524191319),(21,16,'单例，厉害',1524191333),(22,31,'hello',1526549225),(23,32,'理想很丰满，现实很骨感！',1526634696),(24,32,'我，以前是一个放荡不羁爱自由的少年，现在呢，变成了油腻的中年大叔！\n我想，是生活磨去了自己的一些棱角。\n想一想现在已经30岁了，已经太老了，却还在当码农，整日和代码为伍，这种单身狗日子什么时候是个头啊！',1526641394),(25,32,'我，以前是一个放荡不羁爱自由的少年，现在呢，变成了油腻的中年大叔！\n我想，是生活磨去了自己的一些棱角。\n想一想现在已经30岁了，已经太老了，却还在当码农，整日和代码为伍，这种单身狗日子什么时候是个头啊！',1526641401),(26,30,'good',1526982655),(27,1,'只不过是一场生活',1528866113),(28,33,'http 服务，python这么牛',1528946754),(29,32,'岁月如梭',1533723298);
/*!40000 ALTER TABLE `blog_comment` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `tag`
--

DROP TABLE IF EXISTS `tag`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `tag` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(20) NOT NULL,
  `relation` int(11) DEFAULT '0',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=19 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `tag`
--

LOCK TABLES `tag` WRITE;
/*!40000 ALTER TABLE `tag` DISABLE KEYS */;
INSERT INTO `tag` VALUES (3,'php',19),(4,'lamp',3),(5,'vpn',1),(8,'linux',6),(9,'设计模式',1),(10,'redis',2),(11,'数据结构',5),(12,'算法',6),(13,'git',2),(14,'python',4),(15,'tcp',1),(16,'mysql',2),(17,'正则',1),(18,'生活',1);
/*!40000 ALTER TABLE `tag` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `tag_blog`
--

DROP TABLE IF EXISTS `tag_blog`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `tag_blog` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `blogid` int(11) NOT NULL,
  `tagid` int(11) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=61 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `tag_blog`
--

LOCK TABLES `tag_blog` WRITE;
/*!40000 ALTER TABLE `tag_blog` DISABLE KEYS */;
INSERT INTO `tag_blog` VALUES (6,10,3),(7,10,4),(8,11,5),(10,13,7),(11,14,8),(12,14,3),(13,15,3),(14,15,8),(15,15,4),(16,16,3),(17,16,9),(18,17,10),(19,17,8),(20,17,3),(21,18,3),(22,18,11),(23,19,3),(24,19,11),(25,19,12),(26,20,8),(27,20,3),(28,21,3),(29,21,12),(30,21,11),(31,22,3),(32,22,12),(33,23,3),(34,23,8),(35,23,12),(36,24,13),(37,24,8),(38,25,3),(39,26,14),(40,27,14),(41,27,15),(42,28,3),(43,28,16),(44,29,3),(45,29,17),(46,30,14),(47,31,3),(48,31,12),(49,31,11),(50,32,18),(51,33,14),(52,34,3),(53,34,4),(54,34,12),(55,34,11),(56,35,13),(57,36,10),(58,36,3),(59,37,16),(60,37,3);
/*!40000 ALTER TABLE `tag_blog` ENABLE KEYS */;
UNLOCK TABLES;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2018-08-10  1:52:46
